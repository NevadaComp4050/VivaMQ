name: Build and Deploy to DigitalOcean
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the latest code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup SSH for connecting to the DigitalOcean Droplet
      - name: Setup SSH for DigitalOcean
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
        run: |
          mkdir -p ~/.ssh # Create the .ssh directory if it doesn't exist
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts

      - name: "Create env file"
        run: |
          touch .env
          echo ${{ secrets.ENVCONTENTS }} >> .env
          cat .env

      # Step 4: Copy the env file to the backend folder
      - name: Copy env file to backend folder
        run: cp .env ./backend/.env
      - name: Copy env file to frontend folder
        run: cp .env ./frontend/.env
      - name: Copy env file to ai-processor folder
        run: cp .env ./ai-processor/.env

      # Add Node.js setup
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install and build frontend
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      # Install and build backend
      - name: Build backend
        run: |
          cd backend
          npm install
          npm run build

      # Install and build AI microservice
      - name: Build AI microservice
        run: |
          cd ai-processor
          npm install
          npm run build

      # Step 6: Zip the repository
      - name: Zip repository
        run: zip -r -qq repo.zip .

      # Step 7: Copy the zipped repository to the remote system
      - name: Copy zipped repository to remote
        env:
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
          DROPLET_USER: ${{ secrets.DROPLET_USER }}
        run: |
          scp -o StrictHostKeyChecking=no repo.zip $DROPLET_USER@$DROPLET_IP:~/

      # Update deploy step
      - name: Deploy to DigitalOcean Droplet
        env:
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
          DROPLET_USER: ${{ secrets.DROPLET_USER }}
          ENVCONTENTS: ${{ secrets.ENVCONTENTS }}
        run: |
          ssh $DROPLET_USER@$DROPLET_IP << 'EOF'
            unzip -o -qq ~/repo.zip -d ~/
            cd frontend
            touch .env
            echo $ENVCONTENTS >> .env
            npm install
            npm start &
            cd ../backend
            touch .env
            echo $ENVCONTENTS >> .env
            npm install
            npm start &
            cd ../ai-processor
            touch .env
            echo $ENVCONTENTS >> .env
            npm install
            npm start
          EOF
